language: cpp
env: 
    global:
        - OMP_NUM_THREADS=4
        - C_INCLUDE_PATH=$C_INCLUDE_PATH:/usr/local/include/libtcod
        - CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/local/include/libtcod
        - LD_LIBRARY_PATH=/usr/local/lib
          # COVERITY_SCAN_TOKEN, specific to this project
        - secure: "2EiQiZ-7Tdei94aN4tgcFA"
addons:
    coverity_scan:
        project:
            name: y2s82/goblin_camp
            version: 1.0
            description: Goblin Camp Stone Soup, a Dwarf Fortress Clone
        notification_email: y2s1982@gmail.com
        build_command_prepend: cmake .
        build_command: make
        branch_pattern: coverity_scan
before_install:
    - sudo apt-get update
    - sudo apt-get install -y libboost1.54-all-dev
    - sudo apt-get install -y libegl1-mesa-dev libgles2-mesa-dev
    - sudo apt-get install -y libsdl1.2-dev libsdl-image1.2-dev
    - sudo apt-get install -y autoconf automake libtool libasound2-dev libpulse-dev libaudio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev libesd0-dev libdbus-1-dev libudev-dev libgles1-mesa-dev
    - sudo apt-get install -y libpng++-dev
    - sudo apt-get install -y zlib1g-dev
    - sudo apt-get install -y libgl1-mesa-glx
    - sudo apt-get install -y libglew-dev
    - sudo apt-get install -y freeglut3-dev
    - sudo apt-get install -y scons
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-get update
    - sudo apt-get install -y g++-5 gcc-5
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5 
before_script:
    - curl -o sdl.tar.gz http://hg.libsdl.org/SDL/archive/007dfe83abf8.tar.gz
    - tar -xf sdl.tar.gz
    - cd SDL-007dfe83abf8/
    - mkdir -p build
    - cd build
    - ../configure
    - make
    - sudo make install
    - cd ../..
    - wget https://github.com/libtcod/libtcod/archive/1.9.0.zip -O libtcod-1.9.0.zip
    - unzip libtcod-1.9.0.zip
    - cd libtcod-1.9.0/build/autotools
    - autoreconf -i
    - ./configure CFLAGS='-O2'
    - make
    - sudo make install
    - cd ../../..
jobs:
    include:
        - stage: deploy
          compiler:
              - gcc
          script:
              - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then cmake .;make; fi
